plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.1.20'
}

project.ext.lwjglVersion = "3.3.3"
project.ext.lwjglNatives = "natives-linux"

project.ext.jomlVersion = "1.10.8"
project.ext.jomlPrimVersion = "1.10.0"

project.ext.objVersion = "0.4.0"

group = 'me.johanrong.glare'
version = '0.0.5-alpha'

repositories {
    mavenCentral()
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.joml:joml:${jomlVersion}"
    implementation "org.joml:joml-primitives:${jomlPrimVersion}"

    implementation "de.javagl:obj:${objVersion}"

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-bgfx"
    implementation "org.lwjgl:lwjgl-cuda"
    implementation "org.lwjgl:lwjgl-egl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-jawt"
    implementation "org.lwjgl:lwjgl-jemalloc"
    implementation "org.lwjgl:lwjgl-libdivide"
    implementation "org.lwjgl:lwjgl-llvm"
    implementation "org.lwjgl:lwjgl-lmdb"
    implementation "org.lwjgl:lwjgl-lz4"
    implementation "org.lwjgl:lwjgl-meow"
    implementation "org.lwjgl:lwjgl-nanovg"
    implementation "org.lwjgl:lwjgl-nfd"
    implementation "org.lwjgl:lwjgl-nuklear"
    implementation "org.lwjgl:lwjgl-odbc"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opencl"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-opengles"
    implementation "org.lwjgl:lwjgl-openvr"
    implementation "org.lwjgl:lwjgl-opus"
    implementation "org.lwjgl:lwjgl-ovr"
    implementation "org.lwjgl:lwjgl-par"
    implementation "org.lwjgl:lwjgl-remotery"
    implementation "org.lwjgl:lwjgl-rpmalloc"
    implementation "org.lwjgl:lwjgl-shaderc"
    implementation "org.lwjgl:lwjgl-sse"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-tinyexr"
    implementation "org.lwjgl:lwjgl-tinyfd"
    implementation "org.lwjgl:lwjgl-tootle"
    implementation "org.lwjgl:lwjgl-vma"
    implementation "org.lwjgl:lwjgl-vulkan"
    implementation "org.lwjgl:lwjgl-xxhash"
    implementation "org.lwjgl:lwjgl-yoga"
    implementation "org.lwjgl:lwjgl-zstd"

['natives-linux', 'natives-windows'].each { nativePlatform ->
    runtimeOnly "org.lwjgl:lwjgl::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-bgfx::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-jemalloc::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-libdivide::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-llvm::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-lmdb::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-lz4::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-meow::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-nanovg::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-nfd::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-nuklear::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-openal::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-opengles::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-openvr::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-opus::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-par::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-remotery::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-rpmalloc::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-shaderc::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-sse::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-stb::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-tinyexr::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-tinyfd::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-tootle::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-vma::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-xxhash::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-yoga::$nativePlatform"
    runtimeOnly "org.lwjgl:lwjgl-zstd::$nativePlatform"
}
}

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(22)
}
tasks.jar {
    manifest {
        attributes(
                'Implementation-Title': 'Glare',
                'Implementation-Version': version,
                'Main-Class': 'me.johanrong.glare.Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task generateConstants {
    doLast {
        def constantsFile = file("src/main/kotlin/me/johanrong/glare/util/GeneratedConstants.kt")
        constantsFile.text = """
            package me.johanrong.glare.util

            object GeneratedConstants {
                const val GLARE_VERSION: String = "${version}"
            }
        """.stripIndent()
    }
}

compileKotlin.dependsOn(generateConstants)